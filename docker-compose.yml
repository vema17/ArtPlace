services:
  user-service:
    build: 
      context: ./user-service
      dockerfile: dockerfile
    ports:
      - '5000:5000'
    volumes:
      - ./uploads/users:/app/uploads/users
      - ./user-service:/usr/src/app
    depends_on:
      - mysql
      - rabbitmq
    env_file:
      - .env
    networks:
      - my-network

  product-service:
    build: 
      context: ./product-service
      dockerfile: dockerfile
    ports:
      - '5001:5001'
    volumes:
      - ./uploads/products:/app/uploads/products
      - ./product-service:/usr/src/app
    depends_on:
      - mongodb
      - rabbitmq
    env_file:
      - .env
    networks:
      - my-network

  mysql:
    image: mysql:8
    ports:
      - '3306:3306'
    volumes:
      - ./user-service/init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - .env
    networks:
      - my-network

  mongodb:  
    image: mongo
    ports:
      - '27017:27017'
    command: mongod --quiet  
    volumes:
      - ./product-service/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
    env_file:
      - .env
    networks:
      - my-network
  
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"       # Puerto para conexiones de aplicaciones
      - "15672:15672"     # Puerto para el panel de administraci√≥n
    networks:
      - my-network
    env_file:
      - .env

volumes:
  mysql-data:
  mongodb-data:
  uploads:

networks:
  my-network:
