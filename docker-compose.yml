services:
  user-service:
    build: 
      context: ./user-service
      dockerfile: dockerfile
    ports:
      - '5000:5000'
    volumes:
      - ./user-service/init.sql:/docker-entrypoint-initdb.d/init.sql
    depends_on:
      - mysql 
    env_file:
      - .env
    networks:
      - my-network

  product-service:
    build: 
      context: ./product-service
      dockerfile: dockerfile
    ports:
      - '5001:5001'
    volumes:
      - ./product-service/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
    depends_on:
      - mongodb   
    env_file:
      - .env
    networks:
      - my-network

  mysql:
    image: mysql:8
    volumes:
      - mysql_data:/var/lib/mysql
    env_file:
      - .env
    networks:
      - my-network

  mongodb:  
    image: mongo
    command: mongod --quiet  
    volumes:
      - mongo_data:/data/db
    env_file:
      - .env
    networks:
      - my-network

volumes:
  mysql_data:
  mongo_data:

networks:
  my-network:
